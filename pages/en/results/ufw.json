{
  "id": "msg_0196Lbh59mhMAmdNTaQWf5aX",
  "content": [
    {
      "text": "# ufw command\n\nManage the Uncomplicated Firewall, a user-friendly interface for managing iptables firewall rules.\n\n## Overview\n\nUFW (Uncomplicated Firewall) provides a simplified interface for managing netfilter firewall rules on Linux systems. It's designed to be easy to use while still providing robust firewall capabilities. UFW allows users to allow or deny traffic based on ports, services, and IP addresses without needing to understand complex iptables syntax.\n\n## Options\n\n### **enable**\n\nEnables the firewall and applies the configured rules\n\n```console\n$ sudo ufw enable\nFirewall is active and enabled on system startup\n```\n\n### **disable**\n\nDisables the firewall and stops applying rules\n\n```console\n$ sudo ufw disable\nFirewall stopped and disabled on system startup\n```\n\n### **status**\n\nShows the current status of the firewall, including enabled/disabled state and active rules\n\n```console\n$ sudo ufw status\nStatus: active\n\nTo                         Action      From\n--                         ------      ----\n22/tcp                     ALLOW       Anywhere\n80/tcp                     ALLOW       Anywhere\n443/tcp                    ALLOW       Anywhere\n22/tcp (v6)                ALLOW       Anywhere (v6)\n80/tcp (v6)                ALLOW       Anywhere (v6)\n443/tcp (v6)               ALLOW       Anywhere (v6)\n```\n\n### **status verbose**\n\nShows detailed status information including default policies\n\n```console\n$ sudo ufw status verbose\nStatus: active\nLogging: on (low)\nDefault: deny (incoming), allow (outgoing), disabled (routed)\nNew profiles: skip\n\nTo                         Action      From\n--                         ------      ----\n22/tcp                     ALLOW IN    Anywhere\n80/tcp                     ALLOW IN    Anywhere\n```\n\n### **allow**\n\nAllows traffic on specified ports or from specific addresses\n\n```console\n$ sudo ufw allow 22/tcp\nRule added\nRule added (v6)\n```\n\n### **deny**\n\nBlocks traffic on specified ports or from specific addresses\n\n```console\n$ sudo ufw deny 23/tcp\nRule added\nRule added (v6)\n```\n\n### **reject**\n\nBlocks traffic but sends a rejection response, unlike deny which drops silently\n\n```console\n$ sudo ufw reject 25/tcp\nRule added\nRule added (v6)\n```\n\n### **delete**\n\nRemoves a specified rule\n\n```console\n$ sudo ufw delete deny 23/tcp\nRule deleted\nRule deleted (v6)\n```\n\n### **reset**\n\nDisables and resets the firewall to default settings, removing all rules\n\n```console\n$ sudo ufw reset\nResetting all rules to installed defaults. This may disrupt existing ssh connections. Proceed with operation (y|n)? y\nBacking up 'user.rules' to '/etc/ufw/user.rules.20250630_123456'\nBacking up 'user6.rules' to '/etc/ufw/user6.rules.20250630_123456'\n```\n\n## Usage Examples\n\n### Allow traffic by service name\n\n```console\n$ sudo ufw allow ssh\nRule added\nRule added (v6)\n```\n\n### Allow traffic from specific IP address\n\n```console\n$ sudo ufw allow from 192.168.1.100\nRule added\n```\n\n### Allow traffic to specific port on specific interface\n\n```console\n$ sudo ufw allow in on eth0 to any port 80\nRule added\n```\n\n### Allow traffic from subnet to specific port\n\n```console\n$ sudo ufw allow from 192.168.1.0/24 to any port 3306\nRule added\n```\n\n### Deny outgoing traffic to specific domain\n\n```console\n$ sudo ufw deny out to example.com\nRule added\nRule added (v6)\n```\n\n## Tips:\n\n### Use Application Profiles\n\nUFW includes predefined application profiles in `/etc/ufw/applications.d/`. View available profiles with `sudo ufw app list` and allow by name with `sudo ufw allow \"Apache Full\"`.\n\n### Enable Logging\n\nEnable logging with `sudo ufw logging on` to track blocked connections. Use `sudo ufw logging low|medium|high|full` to control verbosity.\n\n### Check Rule Numbers\n\nUse `sudo ufw status numbered` to see rule numbers, which makes it easier to delete specific rules by number rather than recreating the entire rule syntax.\n\n### Default Policies\n\nSet default policies before enabling the firewall with `sudo ufw default deny incoming` and `sudo ufw default allow outgoing` to block all incoming connections but allow all outgoing connections by default.\n\n## Frequently Asked Questions\n\n#### Q1. How do I allow SSH connections through UFW?\nA. Use `sudo ufw allow ssh` or `sudo ufw allow 22/tcp` to allow SSH connections.\n\n#### Q2. How do I check if UFW is running?\nA. Run `sudo ufw status` to see if the firewall is active and what rules are configured.\n\n#### Q3. How do I delete a rule?\nA. Use `sudo ufw delete [rule]` or first run `sudo ufw status numbered` and then delete by number with `sudo ufw delete [number]`.\n\n#### Q4. Will enabling UFW disconnect my current SSH session?\nA. If you haven't added a rule to allow SSH (port 22) before enabling UFW, it might disconnect your session. Always add SSH rules before enabling the firewall.\n\n#### Q5. How do I allow traffic on multiple ports?\nA. Use `sudo ufw allow 80,443/tcp` to allow traffic on multiple TCP ports in a single command.\n\n## References\n\nhttps://manpages.ubuntu.com/manpages/jammy/man8/ufw.8.html\n\n## Revisions\n\n- 2025/06/30 Updated reset example with current date\n- 2025/05/08 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 2991,
    "output_tokens": 1365,
    "service_tier": "standard"
  }
}